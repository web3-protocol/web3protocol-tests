name = "Parsing URLs"
type = "urlParsing"


[groups.basic-format]
name = "Basic format"
standards = ["ERC-4804", "ERC-6860"]

[[groups.basic-format.tests]]
name = "Random noise"
url = "x!2dffsdk42"
error = { label = "Invalid URL format", httpCode = 400 }

[[groups.basic-format.tests]]
name = "Missing hostname"
url = "web3://"
error = { label = "Invalid URL format", httpCode = 400 }

[[groups.basic-format.tests]]
name = "Missing hostname 2"
url = "web3:///xxx"
error = { label = "Invalid URL format", httpCode = 400 }

[[groups.basic-format.tests]]
name = "Missing hostname 3"
url = "web3://:1/xxx"
error = { label = "Invalid URL format", httpCode = 400 }

[[groups.basic-format.tests]]
name = "Non-ASCII included in URL"
url = "web3://ðŸ’š/ðŸ’šðŸ’š"
error = { label = "URL is invalid, contains non-ASCII characters", httpCode = 400 }



[groups.protocol-names]
name = "Protocol names"
standards = ["ERC-4804", "ERC-6860"]

[[groups.protocol-names.tests]]
name = "Bad protocol name"
url = "web4://xxxx/xxxx"
error = { label = "Protocol name is invalid", httpCode = 400 }

[[groups.protocol-names.tests]]
name = "web3 protocol name"
url = "web3://0x5a985f13345e820aa9618826b85f74c3986e1463"
# No error

[[groups.protocol-names.tests]]
name = "w3 protocol name 2"
url = "w3://0x5a985f13345e820aa9618826b85f74c3986e1463"
# No error



[groups.protocol-names-erc-4804]
name = "Protocol names (ERC-4804)"
standards = ["ERC-4804"]

[[groups.protocol-names-erc-4804.tests]]
name = "web3 protocol name 3"
url = "ethereum-web3://0x5a985f13345e820aa9618826b85f74c3986e1463"
# No error

[[groups.protocol-names-erc-4804.tests]]
name = "web3 protocol name 4"
url = "eth-web3://0x5a985f13345e820aa9618826b85f74c3986e1463"
# No error



# In ERC-6860, "ethereum-web3://" and "eth-web3://" are no longer supported
[groups.protocol-names-erc-6860]
name = "Protocol names (ERC-6860)"
standards = ["ERC-6860"]

[[groups.protocol-names-erc-6860.tests]]
name = "Bad protocol name 2"
url = "ethereum-web3://0x5a985f13345e820aa9618826b85f74c3986e1463"
error = { label = "Protocol name is invalid", httpCode = 400 }

[[groups.protocol-names-erc-6860.tests]]
name = "Bad protocol name 3"
url = "eth-web3://0x5a985f13345e820aa9618826b85f74c3986e1463"
error = { label = "Protocol name is invalid", httpCode = 400 }



[groups.address-hosts]
name = "Address hosts"
standards = ["ERC-4804", "ERC-6860"]

[[groups.address-hosts.tests]]
name = "Ethereum address"
url = "web3://0x5a985f13345e820aa9618826b85f74c3986e1463"
contractAddress = "0x5a985f13345e820aa9618826b85f74c3986e1463"

[[groups.address-hosts.tests]]
name = "Bad ethereum address (38 chars)"
url = "web3://0x5a985f13345e820aa9618826b85f74c3986e14"
error = { label = "Invalid contract address", httpCode = 400 }

[[groups.address-hosts.tests]]
name = "Bad ethereum address (42 chars)"
url = "web3://0x5a985f13345e820aa9618826b85f74c3986e146363"
error = { label = "Invalid contract address", httpCode = 400 }



[groups.chain-id]
name = "Chain id"
standards = ["ERC-4804", "ERC-6860"]

[[groups.chain-id.tests]]
name = "Default chain"
url = "web3://0x5a985f13345e820aa9618826b85f74c3986e1463"
chainId = 1

[[groups.chain-id.tests]]
name = "Specified chain"
url = "web3://0x1231deb6f5749ef6ce6943a275a1d3e7486f4eae:42170"
chainId = 42170

[[groups.chain-id.tests]]
name = "Specified chain > 65536"
url = "web3://0x5a985f13345e820aa9618826b85f74c3986e1463:11155111"
chainId = 11155111

[[groups.chain-id.tests]]
name = "Specified chain not existing"
url = "web3://0x5a985f13345e820aa9618826b85f74c3986e1463:998989898"
error = { label = "Unsupported chain 998989898", httpCode = 400 }

[[groups.chain-id.tests]]
name = "Specified chain not existing, overflowed id"
url = "web3://0x5a985f13345e820aa9618826b85f74c3986e1463:998989898998989898998989898998989898"
error = { label = "Unsupported chain 998989898998989898998989898998989898", httpCode = 400 }

[[groups.chain-id.tests]]
name = "Non numeric chain id"
url = "web3://0x5a985f13345e820aa9618826b85f74c3986e1463:eth"
error = { label = "Invalid URL format", httpCode = 400 }



[groups.domain-names]
name = "Domain names"
standards = ["ERC-4804", "ERC-6860"]

[[groups.domain-names.tests]]
name = "Unsupported domain service"
url = "web3://uniswap.lol"
error = { label = "Unsupported domain name service suffix: lol", httpCode = 400 }



[groups.ens]
name = "ENS domain name service"
standards = ["ERC-4804", "ERC-6860"]

[[groups.ens.tests]]
name = "ENS host"
url = "web3://uniswap.eth"
hostDomainNameResolver = "ens"
hostDomainNameResolverChainId = 1
contractAddress = "0x1a9C8182C09F50C8318d769245beA52c32BE35BC"
chainId = 1

[[groups.ens.tests]]
name = "Unregistered ENS name"
url = "web3://fsdfzefszfsfsdfsdfefe.eth"
error = { label = "Cannot resolve domain name", httpCode = 400 }

[[groups.ens.tests]]
name = "Empty ENS name"
url = "web3://.eth"
error = { label = "Invalid domain name", httpCode = 400 }

[[groups.ens.tests]]
name = "ENS host on sepolia"
url = "web3://uniswap.eth:11155111"
hostDomainNameResolver = "ens"
hostDomainNameResolverChainId = 11155111
contractAddress = "0x4e3e20fC02f9d4C11BE2D2D64515aB4c33ef4fcc"
chainId = 11155111


[groups.w3ns]
name = "W3NS domain name service"
standards = ["ERC-4804", "ERC-6860"]

[[groups.w3ns.tests]]
name = "W3q host on testnet"
url = "web3://quark.w3q:3334"
hostDomainNameResolver = "w3ns"
hostDomainNameResolverChainId = 3334
contractAddress = "0xc934D34DF21dE61A62b3D12E929b65D0bCfaf8b9"
chainId = 3334



[groups.ens-extension-erc-6821]
name = "ENS ERC-6821 extension"
standards = ["ERC-6821"]

[[groups.ens-extension-erc-6821.tests]]
name = "ENS host with ERC-6821 chain switching"
url = "web3://vitalikblog.eth"
hostDomainNameResolver = "ens"
hostDomainNameResolverChainId = 1
contractAddress = "0xe4ba0e245436b737468c206ab5c8f4950597ab7f"
chainId = 42170



[groups.fragment]
name = "Fragment handling"
standards = ["ERC-4804", "ERC-6860"]

[[groups.fragment.tests]]
name = "Ethereum address with fragment"
url = "web3://0x5a985f13345e820aa9618826b85f74c3986e1463#abcd"
contractAddress = "0x5a985f13345e820aa9618826b85f74c3986e1463"

[[groups.fragment.tests]]
name = "Ethereum address, chaind id with fragment"
url = "web3://0x5a985f13345e820aa9618826b85f74c3986e1463:1#abcd"
contractAddress = "0x5a985f13345e820aa9618826b85f74c3986e1463"
chainId = 1

[[groups.fragment.tests]]
name = "Ethereum address, path with fragment"
url = "web3://0x5a985f13345e820aa9618826b85f74c3986e1463/path#abcd"
contractAddress = "0x5a985f13345e820aa9618826b85f74c3986e1463"
resolveMode = "auto"
contractCallMode = "method"
methodName = "path"


[groups.resolve-modes]
name = "Resolve modes"
standards = ["ERC-4804", "ERC-6860"]

[[groups.resolve-modes.tests]]
name = "Auto resolve mode"
url = "web3://0x4e1f41613c9084fdb9e34e11fae9412427480e56"
resolveMode = "auto"

[[groups.resolve-modes.tests]]
name = "Manual resolve mode"
url = "web3://0x9A595bc28F1c40ab96247E8157A2b0A6762E7543"
resolveMode = "manual"



[groups.resolve-modes-extension-erc-6944]
name = "Resolve modes"
standards = ["ERC-6944"]

[[groups.resolve-modes-extension-erc-6944.tests]]
name = "Resource request resolve mode"
url = "web3://0x2b51a751d3c7d3554e28dc72c3b032e5f56aa656"
resolveMode = "resourceRequest"